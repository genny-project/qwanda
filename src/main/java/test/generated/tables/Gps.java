/*
 * This file is generated by jOOQ.
 */
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import test.generated.Gennydb;
import test.generated.Indexes;
import test.generated.Keys;
import test.generated.tables.records.GpsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Gps extends TableImpl<GpsRecord> {

    private static final long serialVersionUID = -1701442251;

    /**
     * The reference instance of <code>gennydb.gps</code>
     */
    public static final Gps GPS = new Gps();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GpsRecord> getRecordType() {
        return GpsRecord.class;
    }

    /**
     * The column <code>gennydb.gps.id</code>.
     */
    public final TableField<GpsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>gennydb.gps.accuracy</code>.
     */
    public final TableField<GpsRecord, Double> ACCURACY = createField("accuracy", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gennydb.gps.altitude</code>.
     */
    public final TableField<GpsRecord, Double> ALTITUDE = createField("altitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gennydb.gps.altitude_accuracy</code>.
     */
    public final TableField<GpsRecord, Double> ALTITUDE_ACCURACY = createField("altitude_accuracy", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gennydb.gps.bearing</code>.
     */
    public final TableField<GpsRecord, Double> BEARING = createField("bearing", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gennydb.gps.created</code>.
     */
    public final TableField<GpsRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.gps.latitude</code>.
     */
    public final TableField<GpsRecord, Double> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>gennydb.gps.longitude</code>.
     */
    public final TableField<GpsRecord, Double> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>gennydb.gps.speed</code>.
     */
    public final TableField<GpsRecord, Double> SPEED = createField("speed", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gennydb.gps.targetcode</code>.
     */
    public final TableField<GpsRecord, String> TARGETCODE = createField("targetcode", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.gps.targetid</code>.
     */
    public final TableField<GpsRecord, Long> TARGETID = createField("targetid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>gennydb.gps.timestamp</code>.
     */
    public final TableField<GpsRecord, String> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>gennydb.gps</code> table reference
     */
    public Gps() {
        this(DSL.name("gps"), null);
    }

    /**
     * Create an aliased <code>gennydb.gps</code> table reference
     */
    public Gps(String alias) {
        this(DSL.name(alias), GPS);
    }

    /**
     * Create an aliased <code>gennydb.gps</code> table reference
     */
    public Gps(Name alias) {
        this(alias, GPS);
    }

    private Gps(Name alias, Table<GpsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Gps(Name alias, Table<GpsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Gps(Table<O> child, ForeignKey<O, GpsRecord> key) {
        super(child, key, GPS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gennydb.GENNYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GPS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GpsRecord, Long> getIdentity() {
        return Keys.IDENTITY_GPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GpsRecord> getPrimaryKey() {
        return Keys.KEY_GPS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GpsRecord>> getKeys() {
        return Arrays.<UniqueKey<GpsRecord>>asList(Keys.KEY_GPS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Gps as(String alias) {
        return new Gps(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Gps as(Name alias) {
        return new Gps(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Gps rename(String name) {
        return new Gps(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Gps rename(Name name) {
        return new Gps(name, null);
    }
}
