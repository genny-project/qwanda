/*
 * This file is generated by jOOQ.
 */
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.Baseentity;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BaseentityRecord extends UpdatableRecordImpl<BaseentityRecord> implements Record7<String, Long, Timestamp, String, String, Timestamp, String> {

    private static final long serialVersionUID = 1572016059;

    /**
     * Setter for <code>gennydb.baseentity.dtype</code>.
     */
    public void setDtype(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>gennydb.baseentity.dtype</code>.
     */
    public String getDtype() {
        return (String) get(0);
    }

    /**
     * Setter for <code>gennydb.baseentity.id</code>.
     */
    public void setId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>gennydb.baseentity.id</code>.
     */
    public Long getId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>gennydb.baseentity.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>gennydb.baseentity.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>gennydb.baseentity.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>gennydb.baseentity.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>gennydb.baseentity.realm</code>.
     */
    public void setRealm(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>gennydb.baseentity.realm</code>.
     */
    public String getRealm() {
        return (String) get(4);
    }

    /**
     * Setter for <code>gennydb.baseentity.updated</code>.
     */
    public void setUpdated(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>gennydb.baseentity.updated</code>.
     */
    public Timestamp getUpdated() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>gennydb.baseentity.code</code>.
     */
    public void setCode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>gennydb.baseentity.code</code>.
     */
    public String getCode() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, Long, Timestamp, String, String, Timestamp, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, Long, Timestamp, String, String, Timestamp, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Baseentity.BASEENTITY.DTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Baseentity.BASEENTITY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Baseentity.BASEENTITY.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Baseentity.BASEENTITY.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Baseentity.BASEENTITY.REALM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Baseentity.BASEENTITY.UPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Baseentity.BASEENTITY.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getDtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getRealm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getDtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getRealm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaseentityRecord value1(String value) {
        setDtype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaseentityRecord value2(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaseentityRecord value3(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaseentityRecord value4(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaseentityRecord value5(String value) {
        setRealm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaseentityRecord value6(Timestamp value) {
        setUpdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaseentityRecord value7(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaseentityRecord values(String value1, Long value2, Timestamp value3, String value4, String value5, Timestamp value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BaseentityRecord
     */
    public BaseentityRecord() {
        super(Baseentity.BASEENTITY);
    }

    /**
     * Create a detached, initialised BaseentityRecord
     */
    public BaseentityRecord(String dtype, Long id, Timestamp created, String name, String realm, Timestamp updated, String code) {
        super(Baseentity.BASEENTITY);

        set(0, dtype);
        set(1, id);
        set(2, created);
        set(3, name);
        set(4, realm);
        set(5, updated);
        set(6, code);
    }
}
