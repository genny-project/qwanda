/*
 * This file is generated by jOOQ.
 */
package test.generated.tables;


import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import test.generated.Gennydb;
import test.generated.Indexes;
import test.generated.Keys;
import test.generated.tables.records.AnswerlinksRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Answerlinks extends TableImpl<AnswerlinksRecord> {

    private static final long serialVersionUID = -1604362614;

    /**
     * The reference instance of <code>gennydb.answerlinks</code>
     */
    public static final Answerlinks ANSWERLINKS = new Answerlinks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnswerlinksRecord> getRecordType() {
        return AnswerlinksRecord.class;
    }

    /**
     * The column <code>gennydb.answerlinks.be_list</code>.
     */
    public final TableField<AnswerlinksRecord, String> BE_LIST = createField("be_list", org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>gennydb.answerlinks.askId</code>.
     */
    public final TableField<AnswerlinksRecord, Long> ASKID = createField("askId", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>gennydb.answerlinks.attributeCode</code>.
     */
    public final TableField<AnswerlinksRecord, String> ATTRIBUTECODE = createField("attributeCode", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.answerlinks.created</code>.
     */
    public final TableField<AnswerlinksRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.answerlinks.expired</code>.
     */
    public final TableField<AnswerlinksRecord, Boolean> EXPIRED = createField("expired", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.answerlinks.inferred</code>.
     */
    public final TableField<AnswerlinksRecord, Boolean> INFERRED = createField("inferred", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.answerlinks.refused</code>.
     */
    public final TableField<AnswerlinksRecord, Boolean> REFUSED = createField("refused", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.answerlinks.sourceCode</code>.
     */
    public final TableField<AnswerlinksRecord, String> SOURCECODE = createField("sourceCode", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.answerlinks.targetCode</code>.
     */
    public final TableField<AnswerlinksRecord, String> TARGETCODE = createField("targetCode", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.answerlinks.updated</code>.
     */
    public final TableField<AnswerlinksRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.answerlinks.valueBoolean</code>.
     */
    public final TableField<AnswerlinksRecord, Boolean> VALUEBOOLEAN = createField("valueBoolean", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.answerlinks.valueDate</code>.
     */
    public final TableField<AnswerlinksRecord, Date> VALUEDATE = createField("valueDate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>gennydb.answerlinks.valueDateTime</code>.
     */
    public final TableField<AnswerlinksRecord, Timestamp> VALUEDATETIME = createField("valueDateTime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.answerlinks.valueDouble</code>.
     */
    public final TableField<AnswerlinksRecord, Double> VALUEDOUBLE = createField("valueDouble", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gennydb.answerlinks.valueInteger</code>.
     */
    public final TableField<AnswerlinksRecord, Integer> VALUEINTEGER = createField("valueInteger", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>gennydb.answerlinks.valueLong</code>.
     */
    public final TableField<AnswerlinksRecord, Long> VALUELONG = createField("valueLong", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>gennydb.answerlinks.money</code>.
     */
    public final TableField<AnswerlinksRecord, String> MONEY = createField("money", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>gennydb.answerlinks.valueString</code>.
     */
    public final TableField<AnswerlinksRecord, String> VALUESTRING = createField("valueString", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>gennydb.answerlinks.valueTime</code>.
     */
    public final TableField<AnswerlinksRecord, Time> VALUETIME = createField("valueTime", org.jooq.impl.SQLDataType.TIME, this, "");

    /**
     * The column <code>gennydb.answerlinks.version</code>.
     */
    public final TableField<AnswerlinksRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>gennydb.answerlinks.weight</code>.
     */
    public final TableField<AnswerlinksRecord, Double> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gennydb.answerlinks.attribute_id</code>.
     */
    public final TableField<AnswerlinksRecord, Long> ATTRIBUTE_ID = createField("attribute_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>gennydb.answerlinks.TARGET_ID</code>.
     */
    public final TableField<AnswerlinksRecord, Long> TARGET_ID = createField("TARGET_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>gennydb.answerlinks.SOURCE_ID</code>.
     */
    public final TableField<AnswerlinksRecord, Long> SOURCE_ID = createField("SOURCE_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>gennydb.answerlinks</code> table reference
     */
    public Answerlinks() {
        this(DSL.name("answerlinks"), null);
    }

    /**
     * Create an aliased <code>gennydb.answerlinks</code> table reference
     */
    public Answerlinks(String alias) {
        this(DSL.name(alias), ANSWERLINKS);
    }

    /**
     * Create an aliased <code>gennydb.answerlinks</code> table reference
     */
    public Answerlinks(Name alias) {
        this(alias, ANSWERLINKS);
    }

    private Answerlinks(Name alias, Table<AnswerlinksRecord> aliased) {
        this(alias, aliased, null);
    }

    private Answerlinks(Name alias, Table<AnswerlinksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Answerlinks(Table<O> child, ForeignKey<O, AnswerlinksRecord> key) {
        super(child, key, ANSWERLINKS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gennydb.GENNYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ANSWERLINKS_FK9D7JG67OJPI3VTXSMT0IUTR8B, Indexes.ANSWERLINKS_FKQD07YWJCH02UBS8Q5WMHN2JPS, Indexes.ANSWERLINKS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnswerlinksRecord> getPrimaryKey() {
        return Keys.KEY_ANSWERLINKS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnswerlinksRecord>> getKeys() {
        return Arrays.<UniqueKey<AnswerlinksRecord>>asList(Keys.KEY_ANSWERLINKS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AnswerlinksRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AnswerlinksRecord, ?>>asList(Keys.FKKOGSSGA01SXQUGJ97QMO71CED, Keys.FK9D7JG67OJPI3VTXSMT0IUTR8B, Keys.FKQD07YWJCH02UBS8Q5WMHN2JPS);
    }

    public Attribute attribute() {
        return new Attribute(this, Keys.FKKOGSSGA01SXQUGJ97QMO71CED);
    }

    public Baseentity fk9d7jg67ojpi3vtxsmt0iutr8b() {
        return new Baseentity(this, Keys.FK9D7JG67OJPI3VTXSMT0IUTR8B);
    }

    public Baseentity fkqd07ywjch02ubs8q5wmhn2jps() {
        return new Baseentity(this, Keys.FKQD07YWJCH02UBS8Q5WMHN2JPS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Answerlinks as(String alias) {
        return new Answerlinks(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Answerlinks as(Name alias) {
        return new Answerlinks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Answerlinks rename(String name) {
        return new Answerlinks(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Answerlinks rename(Name name) {
        return new Answerlinks(name, null);
    }
}
