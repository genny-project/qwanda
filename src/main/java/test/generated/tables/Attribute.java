/*
 * This file is generated by jOOQ.
 */
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import test.generated.Gennydb;
import test.generated.Indexes;
import test.generated.Keys;
import test.generated.tables.records.AttributeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Attribute extends TableImpl<AttributeRecord> {

    private static final long serialVersionUID = 1213508585;

    /**
     * The reference instance of <code>gennydb.attribute</code>
     */
    public static final Attribute ATTRIBUTE = new Attribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttributeRecord> getRecordType() {
        return AttributeRecord.class;
    }

    /**
     * The column <code>gennydb.attribute.dtype</code>.
     */
    public final TableField<AttributeRecord, String> DTYPE = createField("dtype", org.jooq.impl.SQLDataType.VARCHAR(31).nullable(false), this, "");

    /**
     * The column <code>gennydb.attribute.id</code>.
     */
    public final TableField<AttributeRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>gennydb.attribute.created</code>.
     */
    public final TableField<AttributeRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.attribute.name</code>.
     */
    public final TableField<AttributeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.attribute.realm</code>.
     */
    public final TableField<AttributeRecord, String> REALM = createField("realm", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>gennydb.attribute.updated</code>.
     */
    public final TableField<AttributeRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.attribute.code</code>.
     */
    public final TableField<AttributeRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>gennydb.attribute.className</code>.
     */
    public final TableField<AttributeRecord, String> CLASSNAME = createField("className", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.attribute.inputmask</code>.
     */
    public final TableField<AttributeRecord, String> INPUTMASK = createField("inputmask", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.attribute.typeName</code>.
     */
    public final TableField<AttributeRecord, String> TYPENAME = createField("typeName", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.attribute.validation_list</code>.
     */
    public final TableField<AttributeRecord, String> VALIDATION_LIST = createField("validation_list", org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>gennydb.attribute.defaultPrivacyFlag</code>.
     */
    public final TableField<AttributeRecord, Boolean> DEFAULTPRIVACYFLAG = createField("defaultPrivacyFlag", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.attribute.defaultValue</code>.
     */
    public final TableField<AttributeRecord, String> DEFAULTVALUE = createField("defaultValue", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.attribute.description</code>.
     */
    public final TableField<AttributeRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.attribute.help</code>.
     */
    public final TableField<AttributeRecord, String> HELP = createField("help", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.attribute.placeholder</code>.
     */
    public final TableField<AttributeRecord, String> PLACEHOLDER = createField("placeholder", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>gennydb.attribute</code> table reference
     */
    public Attribute() {
        this(DSL.name("attribute"), null);
    }

    /**
     * Create an aliased <code>gennydb.attribute</code> table reference
     */
    public Attribute(String alias) {
        this(DSL.name(alias), ATTRIBUTE);
    }

    /**
     * Create an aliased <code>gennydb.attribute</code> table reference
     */
    public Attribute(Name alias) {
        this(alias, ATTRIBUTE);
    }

    private Attribute(Name alias, Table<AttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Attribute(Name alias, Table<AttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Attribute(Table<O> child, ForeignKey<O, AttributeRecord> key) {
        super(child, key, ATTRIBUTE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gennydb.GENNYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ATTRIBUTE_PRIMARY, Indexes.ATTRIBUTE_UK1774SHFID1UAOPL9TU8AM19FQ, Indexes.ATTRIBUTE_UK_1774SHFID1UAOPL9TU8AM19FQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AttributeRecord, Long> getIdentity() {
        return Keys.IDENTITY_ATTRIBUTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AttributeRecord> getPrimaryKey() {
        return Keys.KEY_ATTRIBUTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<AttributeRecord>>asList(Keys.KEY_ATTRIBUTE_PRIMARY, Keys.KEY_ATTRIBUTE_UK1774SHFID1UAOPL9TU8AM19FQ, Keys.KEY_ATTRIBUTE_UK_1774SHFID1UAOPL9TU8AM19FQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Attribute as(String alias) {
        return new Attribute(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Attribute as(Name alias) {
        return new Attribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Attribute rename(String name) {
        return new Attribute(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Attribute rename(Name name) {
        return new Attribute(name, null);
    }
}
