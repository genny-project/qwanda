/*
 * This file is generated by jOOQ.
 */
package test.generated.tables;


import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import test.generated.Gennydb;
import test.generated.Indexes;
import test.generated.Keys;
import test.generated.tables.records.BaseentityAttributeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BaseentityAttribute extends TableImpl<BaseentityAttributeRecord> {

    private static final long serialVersionUID = -1458808875;

    /**
     * The reference instance of <code>gennydb.baseentity_attribute</code>
     */
    public static final BaseentityAttribute BASEENTITY_ATTRIBUTE = new BaseentityAttribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BaseentityAttributeRecord> getRecordType() {
        return BaseentityAttributeRecord.class;
    }

    /**
     * The column <code>gennydb.baseentity_attribute.attributeCode</code>.
     */
    public final TableField<BaseentityAttributeRecord, String> ATTRIBUTECODE = createField("attributeCode", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.baseEntityCode</code>.
     */
    public final TableField<BaseentityAttributeRecord, String> BASEENTITYCODE = createField("baseEntityCode", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.created</code>.
     */
    public final TableField<BaseentityAttributeRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.inferred</code>.
     */
    public final TableField<BaseentityAttributeRecord, Boolean> INFERRED = createField("inferred", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.privacyFlag</code>.
     */
    public final TableField<BaseentityAttributeRecord, Boolean> PRIVACYFLAG = createField("privacyFlag", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.readonly</code>.
     */
    public final TableField<BaseentityAttributeRecord, Boolean> READONLY = createField("readonly", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.updated</code>.
     */
    public final TableField<BaseentityAttributeRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.valueBoolean</code>.
     */
    public final TableField<BaseentityAttributeRecord, Boolean> VALUEBOOLEAN = createField("valueBoolean", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.valueDate</code>.
     */
    public final TableField<BaseentityAttributeRecord, Date> VALUEDATE = createField("valueDate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.valueDateRange</code>.
     */
    public final TableField<BaseentityAttributeRecord, byte[]> VALUEDATERANGE = createField("valueDateRange", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.valueDateTime</code>.
     */
    public final TableField<BaseentityAttributeRecord, Timestamp> VALUEDATETIME = createField("valueDateTime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.valueDouble</code>.
     */
    public final TableField<BaseentityAttributeRecord, Double> VALUEDOUBLE = createField("valueDouble", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.valueInteger</code>.
     */
    public final TableField<BaseentityAttributeRecord, Integer> VALUEINTEGER = createField("valueInteger", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.valueLong</code>.
     */
    public final TableField<BaseentityAttributeRecord, Long> VALUELONG = createField("valueLong", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.money</code>.
     */
    public final TableField<BaseentityAttributeRecord, String> MONEY = createField("money", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.valueString</code>.
     */
    public final TableField<BaseentityAttributeRecord, String> VALUESTRING = createField("valueString", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.valueTime</code>.
     */
    public final TableField<BaseentityAttributeRecord, Time> VALUETIME = createField("valueTime", org.jooq.impl.SQLDataType.TIME, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.weight</code>.
     */
    public final TableField<BaseentityAttributeRecord, Double> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.ATTRIBUTE_ID</code>.
     */
    public final TableField<BaseentityAttributeRecord, Long> ATTRIBUTE_ID = createField("ATTRIBUTE_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>gennydb.baseentity_attribute.BASEENTITY_ID</code>.
     */
    public final TableField<BaseentityAttributeRecord, Long> BASEENTITY_ID = createField("BASEENTITY_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>gennydb.baseentity_attribute</code> table reference
     */
    public BaseentityAttribute() {
        this(DSL.name("baseentity_attribute"), null);
    }

    /**
     * Create an aliased <code>gennydb.baseentity_attribute</code> table reference
     */
    public BaseentityAttribute(String alias) {
        this(DSL.name(alias), BASEENTITY_ATTRIBUTE);
    }

    /**
     * Create an aliased <code>gennydb.baseentity_attribute</code> table reference
     */
    public BaseentityAttribute(Name alias) {
        this(alias, BASEENTITY_ATTRIBUTE);
    }

    private BaseentityAttribute(Name alias, Table<BaseentityAttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private BaseentityAttribute(Name alias, Table<BaseentityAttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BaseentityAttribute(Table<O> child, ForeignKey<O, BaseentityAttributeRecord> key) {
        super(child, key, BASEENTITY_ATTRIBUTE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gennydb.GENNYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BASEENTITY_ATTRIBUTE_AATTRIBUTEID_IDX, Indexes.BASEENTITY_ATTRIBUTE_BASEENTITYID_IDX, Indexes.BASEENTITY_ATTRIBUTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BaseentityAttributeRecord> getPrimaryKey() {
        return Keys.KEY_BASEENTITY_ATTRIBUTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BaseentityAttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<BaseentityAttributeRecord>>asList(Keys.KEY_BASEENTITY_ATTRIBUTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BaseentityAttributeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BaseentityAttributeRecord, ?>>asList(Keys.FKAEDPN6CSUWK6UWM5KQH73TIWD, Keys.FKMQRQCXSQU49B0CLIY2TYMJOAE);
    }

    public Attribute attribute() {
        return new Attribute(this, Keys.FKAEDPN6CSUWK6UWM5KQH73TIWD);
    }

    public Baseentity baseentity() {
        return new Baseentity(this, Keys.FKMQRQCXSQU49B0CLIY2TYMJOAE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaseentityAttribute as(String alias) {
        return new BaseentityAttribute(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaseentityAttribute as(Name alias) {
        return new BaseentityAttribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BaseentityAttribute rename(String name) {
        return new BaseentityAttribute(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BaseentityAttribute rename(Name name) {
        return new BaseentityAttribute(name, null);
    }
}
