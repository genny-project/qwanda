/*
 * This file is generated by jOOQ.
 */
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import test.generated.Gennydb;
import test.generated.Indexes;
import test.generated.Keys;
import test.generated.tables.records.ValidationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Validation extends TableImpl<ValidationRecord> {

    private static final long serialVersionUID = -1240873313;

    /**
     * The reference instance of <code>gennydb.validation</code>
     */
    public static final Validation VALIDATION = new Validation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ValidationRecord> getRecordType() {
        return ValidationRecord.class;
    }

    /**
     * The column <code>gennydb.validation.dtype</code>.
     */
    public final TableField<ValidationRecord, String> DTYPE = createField("dtype", org.jooq.impl.SQLDataType.VARCHAR(31).nullable(false), this, "");

    /**
     * The column <code>gennydb.validation.id</code>.
     */
    public final TableField<ValidationRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>gennydb.validation.created</code>.
     */
    public final TableField<ValidationRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.validation.name</code>.
     */
    public final TableField<ValidationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.validation.realm</code>.
     */
    public final TableField<ValidationRecord, String> REALM = createField("realm", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>gennydb.validation.updated</code>.
     */
    public final TableField<ValidationRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.validation.code</code>.
     */
    public final TableField<ValidationRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>gennydb.validation.multiAllowed</code>.
     */
    public final TableField<ValidationRecord, Boolean> MULTIALLOWED = createField("multiAllowed", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.validation.recursiveGroup</code>.
     */
    public final TableField<ValidationRecord, Boolean> RECURSIVEGROUP = createField("recursiveGroup", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.validation.regex</code>.
     */
    public final TableField<ValidationRecord, String> REGEX = createField("regex", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gennydb.validation.selection_grp</code>.
     */
    public final TableField<ValidationRecord, String> SELECTION_GRP = createField("selection_grp", org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * Create a <code>gennydb.validation</code> table reference
     */
    public Validation() {
        this(DSL.name("validation"), null);
    }

    /**
     * Create an aliased <code>gennydb.validation</code> table reference
     */
    public Validation(String alias) {
        this(DSL.name(alias), VALIDATION);
    }

    /**
     * Create an aliased <code>gennydb.validation</code> table reference
     */
    public Validation(Name alias) {
        this(alias, VALIDATION);
    }

    private Validation(Name alias, Table<ValidationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Validation(Name alias, Table<ValidationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Validation(Table<O> child, ForeignKey<O, ValidationRecord> key) {
        super(child, key, VALIDATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gennydb.GENNYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VALIDATION_PRIMARY, Indexes.VALIDATION_UKH7LRVRSCKUHDA9BJBAF27QM8H, Indexes.VALIDATION_UK_H7LRVRSCKUHDA9BJBAF27QM8H);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ValidationRecord, Long> getIdentity() {
        return Keys.IDENTITY_VALIDATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ValidationRecord> getPrimaryKey() {
        return Keys.KEY_VALIDATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ValidationRecord>> getKeys() {
        return Arrays.<UniqueKey<ValidationRecord>>asList(Keys.KEY_VALIDATION_PRIMARY, Keys.KEY_VALIDATION_UKH7LRVRSCKUHDA9BJBAF27QM8H, Keys.KEY_VALIDATION_UK_H7LRVRSCKUHDA9BJBAF27QM8H);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Validation as(String alias) {
        return new Validation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Validation as(Name alias) {
        return new Validation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Validation rename(String name) {
        return new Validation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Validation rename(Name name) {
        return new Validation(name, null);
    }
}
