/*
 * This file is generated by jOOQ.
 */
package test.generated;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import test.generated.tables.Answer;
import test.generated.tables.Answerlinks;
import test.generated.tables.Ask;
import test.generated.tables.Attribute;
import test.generated.tables.Baseentity;
import test.generated.tables.BaseentityAttribute;
import test.generated.tables.BaseentityBaseentity;
import test.generated.tables.Context;
import test.generated.tables.Gps;
import test.generated.tables.Question;
import test.generated.tables.QuestionQuestion;
import test.generated.tables.Rule;
import test.generated.tables.Template;
import test.generated.tables.Validation;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Gennydb extends SchemaImpl {

    private static final long serialVersionUID = 1113019218;

    /**
     * The reference instance of <code>gennydb</code>
     */
    public static final Gennydb GENNYDB = new Gennydb();

    /**
     * The table <code>gennydb.answer</code>.
     */
    public final Answer ANSWER = test.generated.tables.Answer.ANSWER;

    /**
     * The table <code>gennydb.answerlinks</code>.
     */
    public final Answerlinks ANSWERLINKS = test.generated.tables.Answerlinks.ANSWERLINKS;

    /**
     * The table <code>gennydb.ask</code>.
     */
    public final Ask ASK = test.generated.tables.Ask.ASK;

    /**
     * The table <code>gennydb.attribute</code>.
     */
    public final Attribute ATTRIBUTE = test.generated.tables.Attribute.ATTRIBUTE;

    /**
     * The table <code>gennydb.baseentity</code>.
     */
    public final Baseentity BASEENTITY = test.generated.tables.Baseentity.BASEENTITY;

    /**
     * The table <code>gennydb.baseentity_attribute</code>.
     */
    public final BaseentityAttribute BASEENTITY_ATTRIBUTE = test.generated.tables.BaseentityAttribute.BASEENTITY_ATTRIBUTE;

    /**
     * The table <code>gennydb.baseentity_baseentity</code>.
     */
    public final BaseentityBaseentity BASEENTITY_BASEENTITY = test.generated.tables.BaseentityBaseentity.BASEENTITY_BASEENTITY;

    /**
     * The table <code>gennydb.context</code>.
     */
    public final Context CONTEXT = test.generated.tables.Context.CONTEXT;

    /**
     * The table <code>gennydb.gps</code>.
     */
    public final Gps GPS = test.generated.tables.Gps.GPS;

    /**
     * The table <code>gennydb.question</code>.
     */
    public final Question QUESTION = test.generated.tables.Question.QUESTION;

    /**
     * The table <code>gennydb.question_question</code>.
     */
    public final QuestionQuestion QUESTION_QUESTION = test.generated.tables.QuestionQuestion.QUESTION_QUESTION;

    /**
     * The table <code>gennydb.rule</code>.
     */
    public final Rule RULE = test.generated.tables.Rule.RULE;

    /**
     * The table <code>gennydb.template</code>.
     */
    public final Template TEMPLATE = test.generated.tables.Template.TEMPLATE;

    /**
     * The table <code>gennydb.validation</code>.
     */
    public final Validation VALIDATION = test.generated.tables.Validation.VALIDATION;

    /**
     * No further instances allowed
     */
    private Gennydb() {
        super("gennydb", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Answer.ANSWER,
            Answerlinks.ANSWERLINKS,
            Ask.ASK,
            Attribute.ATTRIBUTE,
            Baseentity.BASEENTITY,
            BaseentityAttribute.BASEENTITY_ATTRIBUTE,
            BaseentityBaseentity.BASEENTITY_BASEENTITY,
            Context.CONTEXT,
            Gps.GPS,
            Question.QUESTION,
            QuestionQuestion.QUESTION_QUESTION,
            Rule.RULE,
            Template.TEMPLATE,
            Validation.VALIDATION);
    }
}
