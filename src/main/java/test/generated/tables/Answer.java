/*
 * This file is generated by jOOQ.
 */
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import test.generated.Gennydb;
import test.generated.Indexes;
import test.generated.Keys;
import test.generated.tables.records.AnswerRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Answer extends TableImpl<AnswerRecord> {

    private static final long serialVersionUID = 2061301834;

    /**
     * The reference instance of <code>gennydb.answer</code>
     */
    public static final Answer ANSWER = new Answer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnswerRecord> getRecordType() {
        return AnswerRecord.class;
    }

    /**
     * The column <code>gennydb.answer.id</code>.
     */
    public final TableField<AnswerRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>gennydb.answer.askId</code>.
     */
    public final TableField<AnswerRecord, Long> ASKID = createField("askId", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>gennydb.answer.attributecode</code>.
     */
    public final TableField<AnswerRecord, String> ATTRIBUTECODE = createField("attributecode", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>gennydb.answer.changeEvent</code>.
     */
    public final TableField<AnswerRecord, Boolean> CHANGEEVENT = createField("changeEvent", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.answer.created</code>.
     */
    public final TableField<AnswerRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.answer.expired</code>.
     */
    public final TableField<AnswerRecord, Boolean> EXPIRED = createField("expired", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.answer.inferred</code>.
     */
    public final TableField<AnswerRecord, Boolean> INFERRED = createField("inferred", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.answer.refused</code>.
     */
    public final TableField<AnswerRecord, Boolean> REFUSED = createField("refused", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>gennydb.answer.sourcecode</code>.
     */
    public final TableField<AnswerRecord, String> SOURCECODE = createField("sourcecode", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.answer.targetcode</code>.
     */
    public final TableField<AnswerRecord, String> TARGETCODE = createField("targetcode", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gennydb.answer.updated</code>.
     */
    public final TableField<AnswerRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gennydb.answer.value</code>.
     */
    public final TableField<AnswerRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gennydb.answer.weight</code>.
     */
    public final TableField<AnswerRecord, Double> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gennydb.answer.attribute_id</code>.
     */
    public final TableField<AnswerRecord, Long> ATTRIBUTE_ID = createField("attribute_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>gennydb.answer</code> table reference
     */
    public Answer() {
        this(DSL.name("answer"), null);
    }

    /**
     * Create an aliased <code>gennydb.answer</code> table reference
     */
    public Answer(String alias) {
        this(DSL.name(alias), ANSWER);
    }

    /**
     * Create an aliased <code>gennydb.answer</code> table reference
     */
    public Answer(Name alias) {
        this(alias, ANSWER);
    }

    private Answer(Name alias, Table<AnswerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Answer(Name alias, Table<AnswerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Answer(Table<O> child, ForeignKey<O, AnswerRecord> key) {
        super(child, key, ANSWER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gennydb.GENNYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ANSWER_FKS5DOQAVR9YY08B1RQE4NDNT4N, Indexes.ANSWER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AnswerRecord, Long> getIdentity() {
        return Keys.IDENTITY_ANSWER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnswerRecord> getPrimaryKey() {
        return Keys.KEY_ANSWER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnswerRecord>> getKeys() {
        return Arrays.<UniqueKey<AnswerRecord>>asList(Keys.KEY_ANSWER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AnswerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AnswerRecord, ?>>asList(Keys.FKS5DOQAVR9YY08B1RQE4NDNT4N);
    }

    public Attribute attribute() {
        return new Attribute(this, Keys.FKS5DOQAVR9YY08B1RQE4NDNT4N);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Answer as(String alias) {
        return new Answer(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Answer as(Name alias) {
        return new Answer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Answer rename(String name) {
        return new Answer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Answer rename(Name name) {
        return new Answer(name, null);
    }
}
